#######
# Types and implementation details.
#
# Virtual machine is started using Cloudify's built-in OpenStack plugin.
# Python simple HTTP server is started using Cloudify's Python web server plugin
# which can be found here: https://github.com/CloudifySource/cosmo-plugin-python-webserver
#

# cloudify.types contains Cloudify's built-in types, relationships, workflows etc...
# cloudify.openstack contains Cloudify's built-in openstack types and plugins definitions.

imports:
    - cloudify.bash
    - cloudify.openstack


# The blueprint contains two nodes, a vm and a web server hosted in it.
blueprint:
    name: hello_world
    nodes:
        -   name: vm
            type: cloudify.openstack.server
            instances:
                deploy: 1
            properties:
                install_agent: true
                worker_config:
                    user: ubuntu
                    port: 22
                    
                    # example for ssh key file (see `key_name` below) 
                    # this file matches the agent key configured during the bootstrap                    
                    key: ~/.ssh/cloudify-agents-kp.pem
                    
                    # Uncomment and update `management_network_name` when working a n neutron enabled openstack
                    # management_network_name: cloudify-admin-network
                    #server:

                    ### if defined, will serve as the hostname for the started instance,
                    ### otherwise, the node_id will be used
                    #name:             ### HOST_NAME

                    # image_name:      ### IMAGE_NAME
                    # flavor_name:     ### FLAVOR_NAME
                    # key_name:        ### KEY_NAME

                    ### uncomment this when working with specific security groups
                    # security_groups: ### SECURITY_GROUPS (['default'] or ['cloudify-sg-agents'] etc...)


        -   name: http_web_server
            type: cloudify.types.bash.web_server
            properties:
                port: 8080
                image_path: images/cloudify-logo.png
                index_path: index.html
                scripts:            
                    configure: scripts/configure.sh
                    start: scripts/start.sh
                    stop: scripts/stop.sh
            relationships:
                -   type: cloudify.relationships.contained_in
                    target: vm