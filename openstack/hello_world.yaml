#######
# Types and implementation details.
#
# Virtual machine is started using Cloudify's built-in OpenStack plugin.
# Python simple HTTP server is started using Cloudify's Python web server plugin
# which can be found here: https://github.com/CloudifySource/cosmo-plugin-python-webserver
#

# cloudify.types contains Cloudify's built-in types, relationships, workflows etc...
# cloudify.openstack contains Cloudify's built-in openstack types and plugins definitions.

imports:
    - cloudify.openstack

# Python web server plugin definition with a specification to run in an agent vm.
# Plugin will be downloaded and installed from the provided url.
plugins:
    python_webserver_installer:
        derived_from: cloudify.plugins.agent_plugin
        properties:
            url: https://github.com/CloudifySource/cosmo-plugin-python-webserver/archive/develop.zip

types:
    web_server:
        derived_from: cloudify.types.web_server
        properties:
            -   port
            -   image_path
        interfaces:
            cloudify.interfaces.lifecycle:
                -   configure: python_webserver_installer.tasks.configure
                -   start: python_webserver_installer.tasks.start
                -   stop: python_webserver_installer.tasks.stop


type_implementations:

    # Uncomment 'server' below and fill in the place holders 
    # with the proper configuration. also, make sure worker_config.key matches 
    # the filename created (or used) during the bootstrap process

    vm_openstack_host_impl:
        type: cloudify.openstack.server
        node_ref: vm
        properties:
            install_agent: true
            worker_config:
                user: ubuntu
                port: 22
                # example for ssh key file (see `key_name` below) 
                # this file matches the agent key configured during the bootstrap
                key: ~/.ssh/cloudify-agents-kp.pem
            # Uncomment and update `management_network_name` when working a n neutron enabled openstack
            # management_network_name: cloudify-admin-network
            #server:

                ### if defined, will serve as the hostname for the started instance,
                ### otherwise, the node_id will be used
                #name:             ### HOST_NAME

                # image_name:      ### IMAGE_NAME
                # flavor_name:     ### FLAVOR_NAME
                # key_name:        ### KEY_NAME

                ### uncomment this when working with specific security groups
                # security_groups: ### SECURITY_GROUPS (['default'] or ['cloudify-sg-agents'] etc...)

    http_web_server_web_server_impl:
        type: web_server
        node_ref: http_web_server
        properties:
            image_path: images/cloudify-logo.png
